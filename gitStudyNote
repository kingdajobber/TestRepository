1、注册git账号，了解overview的内容
2、设置个人信息，可尝试关注其他账号、收藏仓库、Fork仓库等
3、新建个人仓库，创建文件并学会查看历史和编辑、提交文件
4、PC端使用Git Bash工具(Mac自带)，利用Bash命令配置Git环境：
    git config --list //  git config --global user.name "用户名"  //  git config --global user.email "邮件地址"
5、使用Git Bash命令，在本地指定folder建立Git仓库：git init
6、在本地git目录中，创建、编辑文件，使用Bash命令查看状态和日志
    git status // git log
    
7、使用Bash命令将本地git目录的更新内容加入index(暂存库)，然后提交到本地git仓库中
    git add [文件名] //  git commit -m "更新日志"

8、将本地git与Remote git(即线上git)关联，在本地git路径下执行命令：
    git remote add origin [url]
    
9、从Remote git仓库拉取内容到本地git：
    git pull origin master
    
10、将本地git仓库内容推送到Remote git仓库：
    git push -u oring master
    
11、可以创建隐藏文件【.gitignore】写入需要ignore的文件或类型，实现忽略提交的效果

12、可以通过更改配置文件中alias，实现命令缩写别名：
    git config --global alias.[别名] [原命令]
    
13、git可以支持多种协议：本地协议、git协议、HTTP(S)协议(文本传输传速慢)、SSH协议(压缩率最大，传速快)。
    其中主要用：HTTP(S)协议、SSH协议。
    git clone https://github.com/kingdajobber/TestRepository
    git clone SSH://git@git.com:kingdajobber/TestRepository
    
14、SSH协议需要建立钥匙对(包括一个私钥，一个公钥)
    ssh-keygen -t rsa -C "[备注]多用邮箱"
    创建路径 ～/.ssh 并生成 id_rsa / id_rsa.pub 一对钥匙文件
    
15、将 id_rsa.pub 公钥的内容复制到git网站的个人设置中，创建公钥

16、使用SSH协议的clone命令，在本地创建SSH协议的git仓库。(之前用的都是基于HTTP(S)协议)

17、如果本地电脑没有私钥，无法完成 push 操作；但本地电脑没有公钥，则不影响

18、git commit 添加comment的格式：
    [类型](路径或文件): [主题]
    ---空行---
    [内容摘要(选填)]
    ---空行---
    [footer(选填)]
    
19、git log 的一些用法：
    git log [file name]   查看某个文件的提交历史
    git log --grep [msg]  根据msg筛选提交历史
    git log -n  查看前n条提交历史日志
    
20、git diff 可以查看不同版本的差异：
    git diff 比较缓存和本地
    git diff HEAD --cached 比较仓库和缓存差异
    git diff HEAD 比较仓库和本地差异
    git diff HEAD HEAD^ 比较仓库中两个版本差异(也可用哈希值代替)
    git tag [tag_name] [哈希值]  给哈希值的文件定义标签
